#summary A quick guide for creating a SADI service for wrapping a SOAP service
#labels Phase-Implementation,SOAP,Tutorial,WebService

= Introduction =
Here we present a step by step guide for creating a Java SADI service that wraps an existing [http://www.ebi.ac.uk/chebi/ ChEBI] [http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl SOAP service] for getting the charge of a molecule. This guide extends [http://sadiframework.org/content/getting-involved/building-a-sadi-service-in-java/ Building a SADI service in Java].

= Create an OWL document describing your Input and Output =
The input and outputs of all SADI services must be described in a  dereferenceable OWL ontology document. For this example we will be using the following input and output classes:

Input class description:
{{{
'ChEBI Entity' that 'has attribute' some 'ChEBI Identifier'
}}}
Where:
{{{
'ChEBI identifier 'has value' some Literal
}}}

Note: We use only valid ChEBI identifiers as the associated value of the 'ChEBI identifier' class, i.e.: "CHEBI:29977"

Output class description:
{{{
'ChEBI Entity' that 'has attribute' some Charge
}}}

Where:
{{{
Charge 'has value' some Literal
}}}

Note: The literal associated with the Charge attribute will have as value the value returned from the SOAP service call. 

The resulting OWL document has been made available [http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl here]
  
= Create the SADI service Java Stub =
After creating a Maven project modify the pom.xml file and make sure that the following nodes are included
{{{
<packaging>war</packaging>
}}}

{{{
<build>
  <finalName>sadi-service-example</finalName>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <configuration>
        <source>1.6</source>
        <target>1.6</target>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>maven-jetty-plugin</artifactId>
      <version>6.1.24</version>
      <configuration>
        <contextPath>/sadi-services</contextPath>
      </configuration>
    </plugin>
    <plugin>
      <groupId>ca.wilkinsonlab.sadi</groupId>
      <artifactId>sadi-generator</artifactId>
      <version>0.1.0-SNAPSHOT</version>
    </plugin>
    <plugin>
      <groupId>ca.wilkinsonlab.sadi</groupId>
      <artifactId>sadi-tester</artifactId>
      <version>0.1.0-SNAPSHOT</version>
    </plugin>
  </plugins>
</build>
}}}
 

{{{
<pluginRepositories>
  <pluginRepository>
    <id>dev.biordf.net</id>
    <name>dev.biordf.net</name>
    <url>http://dev.biordf.net/maven</url>
  </pluginRepository>
</pluginRepositories>
<repositories>
  <repository>
    <id>dev.biordf.net</id>
    <name>dev.biordf.net</name>
    <url>http://dev.biordf.net/maven</url>
  </repository>
</repositories>
<dependencies>
  <dependency>
    <groupId>ca.wilkinsonlab.sadi</groupId>
    <artifactId>sadi-service</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </dependency>
</dependencies>
}}}

= Add a Maven run configuration =
If you are using Eclipse you can download the runtime maven configuration file from [http://sadi-data.semanticscience.org/setup/runconfigs.zip here]. Extract the contents to a directory created inside of your Maven project.

If you are not using eclipse you can go to the location of your project on your filesystem and run the following command

{{{
$ mvn ca.wilkinsonlab.sadi:sadi-generator:generate-service 
  -DserviceName=sadi-sercice-example 
  -DserviceClass=com.example.HelloWorldService 
  -DinputClass=http://sadiframework.org/examples/hello.owl#NamedIndividual 
  -DoutputClass=http://sadiframework.org/examples/hello.owl#GreetedIndividual 
  -DcontactEmail=your-email-address
  -DserviceDescription=This service takes as an input a 
}}}

= External Links =
 * [http://sadiframework.org/content/getting-involved/what-is-a-sadi-service/ What is a Sadi Service?]
 * [http://sadiframework.org/content/getting-involved/building-a-sadi-service-in-java/ Building a SADI service in Java]
 * [http://sadiframework.org/registry/services/ The SADI service Registry]
 * [http://sadiframework.org/registry/register/ Register your SADI services]