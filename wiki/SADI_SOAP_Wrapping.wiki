#summary A quick guide for creating a SADI service for wrapping a SOAP service
#labels Phase-Implementation,SOAP,Tutorial,WebService

= Introduction =
Here we present a step by step guide for creating a Java SADI service that wraps an existing [http://www.ebi.ac.uk/chebi/ ChEBI] [http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl SOAP service] for getting the charge of a molecule. This guide extends [http://sadiframework.org/content/getting-involved/building-a-sadi-service-in-java/ Building a SADI service in Java].

= Create an OWL document describing your Input and Output =
The input and outputs of all SADI services must be described in a  dereferenceable OWL ontology document. For this example we will be using the following input and output classes:

Input class description:
{{{
'ChEBI Entity' that 'has attribute' some 'ChEBI Identifier'
}}}
Where:
{{{
'ChEBI identifier 'has value' some Literal
}}}

Note: We use only valid ChEBI identifiers as the associated value of the 'ChEBI identifier' class, i.e.: "CHEBI:29977"

Output class description:
{{{
'ChEBI Entity' that 'has attribute' some Charge
}}}

Where:
{{{
Charge 'has value' some Literal
}}}

Note: The literal associated with the Charge attribute will have as value the value returned from the SOAP service call. 

The resulting OWL document has been made available [http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl here]
  
= Generate the SADI service code =
After creating a Maven project modify the pom.xml file and make sure that the following nodes are included
{{{
<packaging>war</packaging>
}}}

{{{
<build>
  <finalName>sadi-service-example</finalName>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <configuration>
        <source>1.6</source>
        <target>1.6</target>
      </configuration>
    </plugin>
    <plugin>
      <groupId>org.mortbay.jetty</groupId>
      <artifactId>maven-jetty-plugin</artifactId>
      <version>6.1.24</version>
      <configuration>
        <contextPath>/sadi-services</contextPath>
      </configuration>
    </plugin>
    <plugin>
      <groupId>ca.wilkinsonlab.sadi</groupId>
      <artifactId>sadi-generator</artifactId>
      <version>0.1.0-SNAPSHOT</version>
    </plugin>
    <plugin>
      <groupId>ca.wilkinsonlab.sadi</groupId>
      <artifactId>sadi-tester</artifactId>
      <version>0.1.0-SNAPSHOT</version>
    </plugin>
  </plugins>
</build>
}}}
 

{{{
<pluginRepositories>
  <pluginRepository>
    <id>dev.biordf.net</id>
    <name>dev.biordf.net</name>
    <url>http://dev.biordf.net/maven</url>
  </pluginRepository>
</pluginRepositories>
<repositories>
  <repository>
    <id>dev.biordf.net</id>
    <name>dev.biordf.net</name>
    <url>http://dev.biordf.net/maven</url>
  </repository>
</repositories>
<dependencies>
  <dependency>
    <groupId>ca.wilkinsonlab.sadi</groupId>
    <artifactId>sadi-service</artifactId>
    <version>0.1.0-SNAPSHOT</version>
  </dependency>
</dependencies>
}}}

== Run the SADI service generator Maven plugin ==
If you are using Eclipse you can download the runtime maven configuration file from [http://sadi-data.semanticscience.org/setup/runconfigs.zip here]. Create a directory inside of your Maven project and extract to it the contents of the zip file. Now you can go to Run->Run configurations and from the left panel select "generate sadi service" under the Maven Build menu and change the serviceName, serviceClass, inputClass, outputClass and contact email.
We strongly recommend that you also add the serviceDescription parameter to your run configuration and provide a complete human readable description of what this service does. i.e.:


{{{
This SADI service wraps the SOAP service ChebiWebServiceService located  at
http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl. It calls the 
operation getChebiAsciiName. This service takes as an input an 
instance of the class 
http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00030 
a ChEBI Entity that has attribute some ChEBI Identifier.
It returns as an output an instance of the class 
http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00035, 
a ChEBI entity and has attribute some Charge. 
http://sadi-data.semanticscience.org/ChebiGetChargeSadiWrapper/input.rdf  
contains an example of an input and 
http://sadi-data.semanticscience.org/ChebiGetChargeSadiWrapper/output.rdf 
contains the corresponding output.
}}}

Once ready click on RUN. 

If you are not using Eclipse you can go to the location of your project on your file system and run the following command
{{{
$ mvn ca.wilkinsonlab.sadi:sadi-generator:generate-service 
  -DserviceName=sadi-sercice-example 
  -DserviceClass=com.example.HelloWorldService 
  -DinputClass=http://sadiframework.org/examples/hello.owl#NamedIndividual 
  -DoutputClass=http://sadiframework.org/examples/hello.owl#GreetedIndividual 
  -DcontactEmail=your-email-address
  -DserviceDescription=This service takes as an input a 
}}}

The service generator plugin should now have created a Java stub under src/main/java

== Make the SOAP call within the SADI service ==

For this example, open src/main/java/org/semanticscience/sadi/soapwrapper/chebisoap/GetCharge.java

{{{
package org.semanticscience.sadi.soapwrapper.chebisoap;

import java.net.MalformedURLException;
import java.net.URL;

import org.apache.log4j.Logger;
import org.semanticscience.sadi.soapwrapper.chebisoap.helper.ChebiSoapHelper;

import uk.ac.ebi.webservices.chebi.ChebiWebServiceFault_Exception;
import uk.ac.ebi.webservices.chebi.ChebiWebServicePortType;
import uk.ac.ebi.webservices.chebi.ChebiWebServiceService;
import uk.ac.ebi.webservices.chebi.Entity;
import ca.wilkinsonlab.sadi.service.annotations.ContactEmail;
import ca.wilkinsonlab.sadi.service.annotations.Description;
import ca.wilkinsonlab.sadi.service.annotations.InputClass;
import ca.wilkinsonlab.sadi.service.annotations.Name;
import ca.wilkinsonlab.sadi.service.annotations.OutputClass;
import ca.wilkinsonlab.sadi.service.simple.SimpleSynchronousServiceServlet;

import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;

/**
 * @author "Jose Cruz-Toledo"
 * ChebiSoapGetCharge
 */
@Name("ChebiSoapGetCharge")
@Description("This SADI service wraps the SOAP service ChebiWebServiceService located  at http://www.ebi.ac.uk/webservices/chebi/2.0/webservice?wsdl. 
It calls the operation getChebiAsciiName. This service takes as an input an instance of the class 
http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00030 
a ChEBI Entity that has attribute some ChEBI Identifier. It returns as an output
 an instance of the class http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00035, 
a ChEBI entity and has attribute some Charge. 
http://sadi-data.semanticscience.org/ChebiGetChargeSadiWrapper/input.rdf  contains an example of
 an input and http://sadi-data.semanticscience.org/ChebiGetChargeSadiWrapper/output.rdf contains 
the corresponding output.")
@ContactEmail("josemiguelcruztoledo@gmail.com")
@InputClass("http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00030")
@OutputClass("http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00035")
public class GetCharge extends SimpleSynchronousServiceServlet {
	private static final Logger log = Logger.getLogger(GetCharge.class);
	private static final long serialVersionUID = 1L;

	public void processInput(Resource input, Resource output) {
		// get a model from the resource
		Model inputModel = input.getModel();
		Model outputModel = output.getModel();
		// get a chebi soap helper object
		ChebiSoapHelper csh = new ChebiSoapHelper();
		// Get the value of the CHEBI id that is coming in
		String chebiId = csh.getChebiId(input,
				Vocab.chebi_soap_00051.toString(),
				Vocab.chebi_soap_00052.toString());
		String charge = "";
		// Do SOAP
		// Check the ChebiId
		if (csh.checkChebiId(chebiId)) {
			// Find the class generated by CXF that extends Service
			ChebiWebServiceService service = new ChebiWebServiceService();
			// Find the get method that uses the Service classes' getPort method
			ChebiWebServicePortType port = service.getChebiWebServicePort();
			try {
				Entity en = port.getCompleteEntity(chebiId);
				charge = en.getCharge();
				// create attribute resource
				String base = csh.getBaseURL(new URL(input.getURI()));
				Resource attrInstance = outputModel.createResource(base
						+ csh.getPositiveRandomNumber());
				// type the attribute instance
				attrInstance.addProperty(ChebiSoapHelper.Vocabulary.rdftype,
						Vocab.chebi_soap_00013);
				// add the value to the attributed instance
				attrInstance.addProperty(Vocab.chebi_soap_00052, charge);
				// connect the output with the attributed instance
				output.addProperty(Vocab.chebi_soap_00051, attrInstance);
			} catch (ChebiWebServiceFault_Exception e) {
				e.printStackTrace();
			} catch (MalformedURLException e) {
				e.printStackTrace();
			}
		}
	}

	@SuppressWarnings("unused")
	private static final class Vocab {
		private static Model m_model = ModelFactory.createDefaultModel();

		public static final Property chebi_soap_00052 = m_model
				.createProperty("http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00052");
		public static final Property chebi_soap_00051 = m_model
				.createProperty("http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00051");
		public static final Resource chebi_soap_00009 = m_model
				.createResource("http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00009");
		public static final Resource chebi_soap_00030 = m_model
				.createResource("http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00030");
		public static final Resource chebi_soap_00034 = m_model
				.createResource("http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00034");
		public static final Resource Literal = m_model
				.createResource("http://www.w3.org/2000/01/rdf-schema#Literal");
		public static final Resource chebi_soap_00013 = m_model
				.createResource("http://sadi-ontology.semanticscience.org/chebi-sadi-soap.owl#chebi_soap_00013");
	}
}

}}}

= External Links =
 * [http://sadiframework.org/content/getting-involved/what-is-a-sadi-service/ What is a Sadi Service?]
 * [http://sadiframework.org/content/getting-involved/building-a-sadi-service-in-java/ Building a SADI service in Java]
 * [http://sadiframework.org/registry/services/ The SADI service Registry]
 * [http://sadiframework.org/registry/register/ Register your SADI services]