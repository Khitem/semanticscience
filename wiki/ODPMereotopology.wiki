#summary Ontology Design Pattern - Wholes, parts and their topology
#labels SIO,SADI,ODP
#sidebar SIOSideBar
Structural descriptions of objects in terms of their parts and how they are connected together is a basic requirement. SIO provides the following relations to precisely do this.

==mereology==

*[http://semanticscience.org/resource/SIO_000028 'has part']*

The 'has part' relation links an object to itself (reflexive) and all of its  parts (transitive). The reflexive nature of the relation means that we can query for the whole and any of its parts using 'has part' some 'x' rather than 'x' and 'has part' some 'x'. 

*[http://semanticscience.org/resource/SIO_000053 'has proper part']*

The 'has proper part' relation (irreflexive, asymmetric, transitive) is a subproperty of 'has part' and links an object to all of its parts, ensuring that the whole is different from all of its parts.

*[http://semanticscience.org/resource/SIO_000273 'has direct part']*

Because it is a simple relation (non-transitive), 'has direct part' is a more specific relation than 'has proper part' and provides an avenue to quantify the number of parts (via a cardinality restriction) at a desired level of granularity.

*[http://semanticscience.org/resource/SIO_000369 'has component part']*

The 'has component part' relation is a subproperty of 'has direct part' and provides the means by which to state that the part is intrinsic to the whole, and that the removal of the part changes the identity of the whole.  Consider how removing an atom from a molecule changes the kind of molecule that it is, but losing a limb does not change a person's identity.

==topology==

While the 'has part' relation hierarchy is focused on identifying the parts of a whole, the next set of relations allows one to specify how the parts are connected to each other. 

*[http://semanticscience.org/resource/SIO_000203 'is connected to']*

'is connected to' is a transitive relation that specifies that components either directly share a boundary (they are directly connected to each other) or that they are indirectly connected by a path of unbroken direct connections.


*[http://semanticscience.org/resource/SIO_000652 'is directly connected to']*

The 'is directly connected to' indicates that two components share a boundary. Since this relation is nontransitive, we can use it in statements to quantify the number of connections from one part to other kinds of parts.


*[http://semanticscience.org/resource/SIO_000242 'is directly before']*

'is directly before' is a relation between entities placed on a dimensional axis in which the projection of the position of the first entity is numerically less than the projection of the position of the second entity, and the entities are adjacent to one another. This is useful for indicating the spatial positioning of residues in linear biopolymers such as proteins or nucleic acids.

*[http://semanticscience.org/resource/SIO_000241 'is directly after']*

is directly after is a relation between entities placed on a dimensional axis in which the projection of the position of the first entity is numerically greater than the projection of the position of the second entity, and the entities are adjacent to one another. This is useful for indicating the spatial positioning of residues in linear biopolymers such as proteins or nucleic acids.



_molecule example_
{{{
'methane' 
 equivalentClass
 'molecule'
 and 'has component part' exactly 3 'methane hydrogen atom'
 and 'has component part' exactly 1 'methane carbon atom'
 and 'has component part' only ('part of' some 'methane carbon atom' or 'part of' some 'methane hydrogen atom')

'methane hydrogen atom'
 equivalentClass
 'hydrogen atom'
 and 'is component part of' exactly 1 'methane'
 and 'is covalently connected to' exactly 1 'methane carbon atom'

'methane carbon atom'
 equivalentClass
 'carbon atom'
 and 'is component part of' exactly 1 'methane'
 and 'is covalently connected to' exactly 3 'methane hydrogen atom'
}}}

_protein example_
{{{
'human p53 isoform 1'
 equivalentClass
 'protein'
 and 'has component part' exactly 1 ('human p53 isoform 1 methionine residue @ pos1')
 and 'has component part' exactly 1 ('human p53 isoform 1 glutamate residue @ p2')
 ...
 
'human p53 isoform 1 methionine residue @ p1'
 equivalentClass
 'methionine residue'  // use chebi 
 'is component part of' exactly 1 'human p53 isoform 1'
 and 'has attribute' exactly 1 ('position' and 'has value' value "1"^^xsd:int)
 and 'is directly before' exactly 1 ('human p53 isoform 1 glutamate residue @ p2')

...

}}}